Project Title:
Game of Thrones Three-Tier Web Application

Objective:
To develop and deploy a scalable and interactive web application that fetches and displays Game of Thrones data using a backend API and a React frontend, ensuring a robust CI/CD pipeline for continuous integration and deployment.

Technologies Used:
Backend: Node.js, Express
Frontend: React
Database: MongoDB
Containerization: Docker, Docker Compose
CI/CD: Jenkins
Source Control: GitHub
Infrastructure:
Deployment: Docker containers orchestrated using Docker Compose
CI/CD Pipeline: Jenkins running inside a Docker container
Version Control: GitHub for source code management
Project Steps:
Backend Development: Created APIs using Node.js to interact with MongoDB and fetch Game of Thrones data.
Frontend Development: Built a React application to consume the backend APIs and display the data interactively.
Containerization: Containerized both backend and frontend applications using Docker.
Multi-Container Deployment: Used Docker Compose to manage and deploy the multi-container application.
CI/CD Pipeline Setup:
Configured Jenkins to run inside a Docker container.
Created a Jenkins pipeline to automate the build and deployment process.
Set up GitHub integration to trigger the pipeline on code changes.
Achievement:
Successfully developed, containerized, and deployed a fully functional and interactive Game of Thrones web application with an automated CI/CD pipeline, ensuring seamless integration and continuous deployment with every code change.





